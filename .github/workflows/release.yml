name: Upload Release

on:
  workflow_dispatch:
    inputs:
      release:
        description: The tag of the release to edit (attach the packages)
        default: "v"
        required: true
  release:
    types: [published]

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@master
      with:
        submodules: recursive
    - uses: actions/cache@master
      id: carthage-cache
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile') }}

    - name: Install Theos Dependencies
      run: brew install ldid fakeroot make dpkg
    
    - name: Add GNU make to PATH
      run: echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH

    - name: Install Theos
      uses: actions/checkout@master
      with:
        repository: theos/theos
        path: theos
        submodules: recursive

    - name: Build Dependencies
      if: steps.carthage-cache.outputs.cache-hit != 'true'
      run: |
        ./carthage-fix.sh bootstrap --no-use-binaries --platform iOS --cache-builds

    - name: Build Package
      id: package_build
      env:
        THEOS: theos
      run: |
        make package FINALPACKAGE=1
        echo "::set-output name=package::$(ls -t packages | head -n1)"

    - name: Configure Variables
      id: config
      shell: bash
      run: |
        if [[ -n '${{ github.event.release }}' ]]; then  # release
          echo '::set-output name=release::${{ github.event.release.tag_name }}'
          ###
          if [[ '${{ github.event.release.prerelease }}' == 'true' ]]; then 
            echo '::set-output name=beta::1'
          else
            echo '::set-output name=beta::'
          fi
        else  # manual
          echo '::set-output name=release::${{ github.event.inputs.release }}'
          version="$(grep '^Version:' control | cut -d' ' -f2 | tr '~' '-')"
          echo "::set-output name=tag::v${version}"
          ###
          if [[ "$version" == *beta* ]]; then 
            echo '::set-output name=beta::1'
          else
            echo '::set-output name=beta::'
          fi
          ###
        fi

    - name: Create Tag
      if: steps.config.outputs.tag
      run: |
        git tag '${{ steps.config.outputs.tag }}'
        git push origin '${{ steps.config.outputs.tag }}'

    - name: Clone gh-pages
      run: |
        git clone -b gh-pages https://${{ github.repository_owner }}:${{ github.token }}@github.com/${{ github.repository_owner }}/Zebra.git ~/website
    - name: Move package to repo
      if: '!steps.config.outputs.beta'
      run: |
        mkdir ~/website/repo/newpackages
        cd packages
        fn=$(ls -t | head -n1)
        echo $fn
        mv -f -- "$fn" ~/website/repo/newpackages
    - name: Move package to beta repo
      if: steps.config.outputs.beta
      run: |
        mkdir ~/website/beta/newpackages
        cd packages
        fn=$(ls -t | head -n1)
        echo $fn
        mv -f -- "$fn" ~/website/beta/newpackages
    - name: Push repo
      if: '!steps.config.outputs.beta'
      run: |
        cd ~/website
        chmod +x repo_update.sh
        ./repo_update.sh
    - name: Push beta repo
      if: steps.config.outputs.beta
      run: |
        cd ~/website
        chmod +x beta_update.sh
        ./beta_update.sh

    - name: Upload package to release
      if: '!steps.config.outputs.beta'
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: gh release upload '${{ steps.config.outputs.release }}' ~/website/repo/pkgfiles/${{ steps.package_build.outputs.package }}
    - name: Upload package to beta release
      if: steps.config.outputs.beta
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: gh release upload '${{ steps.config.outputs.release }}' ~/website/beta/pkgfiles/${{ steps.package_build.outputs.package }}

    - name: Build IPA package
      id: ipa_build
      if: '!steps.config.outputs.beta'
      env:
        THEOS: theos
      run: |
        make package FINALPACKAGE=1 PACKAGE_FORMAT=ipa
        echo "::set-output name=package::$(ls -t packages | head -n1)"
    - name: Upload IPA to release
      if: '!steps.config.outputs.beta'
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: gh release upload '${{ steps.config.outputs.release }}' packages/${{ steps.ipa_build.outputs.package }}
